{"version":3,"file":"static/js/981.a9a16245.chunk.js","mappings":"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","sources":["Components/BookCreat.jsx","Components/BookUpdate.jsx","Components/Books.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Button } from 'primereact/button';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { MultiSelect } from 'primereact/multiselect';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst BookCreate = (props) => {\r\n    const { createBook, visibleCreatBook, setVisibleCreatBook } = props;\r\n    const { token } = useSelector((state) => state.token);\r\n    const [name, setName] = useState(\"\"); // שינוי ל-State עבור שם הספר\r\n    const [selectedGrades, setSelectedGrades] = useState([]);\r\n    const [grades, setGrades] = useState([]);\r\n    const [nameError, setNameError] = useState(false);\r\n    const [imageError, setImageError] = useState(false);\r\n    const [selectedimage, setselectedImage] = useState(null);\r\n    const [preview, setPreview] = useState(null);\r\n    const { gradeId } = useParams();\r\n\r\n    const AvailablGrade = async () => {\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}api/grade`, {\r\n                headers: { 'Authorization': `Bearer ${token}` }\r\n            });\r\n            if (res.status === 204) {\r\n                setGrades([]);\r\n            } else {\r\n                const gradeOptions = res.data.map((grade) => ({\r\n                    label: grade.name,\r\n                    value: grade.name,\r\n                    id: grade._id,\r\n                }));\r\n                setGrades(gradeOptions);\r\n                if (gradeId) {\r\n                    const selectedGrade = gradeOptions.find((grade) => grade.id === gradeId);\r\n                    if (selectedGrade) {\r\n                        setSelectedGrades([selectedGrade.value]);\r\n                    }\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching grades:', error);\r\n            setGrades([]);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        AvailablGrade();\r\n    }, [gradeId]);\r\n\r\n    const handleCreateClick = () => {\r\n        createBook(name, selectedGrades, selectedimage);\r\n        setVisibleCreatBook(false);\r\n    };\r\n\r\n    return (\r\n        <Dialog\r\n            visible={visibleCreatBook}\r\n            modal\r\n            header=\"Create Book\"\r\n            style={{ width: '400px', borderRadius: '8px' }}\r\n            onHide={() => setVisibleCreatBook(false)}\r\n        >\r\n            <div className=\"flex flex-column gap-4\" style={{ padding: '1rem' }}>\r\n                <div className=\"inline-flex flex-column gap-2\">\r\n                    <label htmlFor=\"name\" className=\"font-medium\">Name</label>\r\n                    <InputText\r\n                        id=\"name\"\r\n                        className={`p-inputtext-sm ${nameError ? 'p-invalid' : ''}`}\r\n                        type=\"text\"\r\n                        value={name} \r\n                        onChange={(e) => setName(e.target.value)} \r\n                        placeholder=\"Enter book name\"\r\n                    />\r\n                    {nameError && (\r\n                        <small className=\"p-error\">This field is required.</small>\r\n                    )}\r\n                </div>\r\n\r\n                <div className=\"inline-flex flex-column gap-2\">\r\n                    <label htmlFor=\"grades\" className=\"font-medium\">Grades</label>\r\n                    <MultiSelect\r\n                        id=\"grades\"\r\n                        value={selectedGrades}\r\n                        options={grades}\r\n                        onChange={(e) => setSelectedGrades(e.value)}\r\n                        optionLabel=\"label\"\r\n                        placeholder=\"Select Grades\"\r\n                        display=\"chip\"\r\n                        className=\"p-multiselect-sm\"\r\n                        virtualScrollerOptions={{ itemSize: 38 }}\r\n                    />\r\n                </div>\r\n\r\n                {/* שדה תמונה לפי כתובת URL */}\r\n                <div className=\"inline-flex flex-column gap-2\">\r\n                    <label htmlFor=\"image\" className=\"font-medium\">Upload Image</label>\r\n                    <FileUpload\r\n                        name=\"image\"\r\n                        customUpload\r\n                        accept=\"image/*\"\r\n                        maxFileSize={5 * 1024 * 1024}\r\n                        uploadHandler={(e) => {\r\n                            const file = e.files[0];\r\n                            if (file) {\r\n                                setselectedImage(file);\r\n                                setPreview(URL.createObjectURL(file));\r\n                            }\r\n                        }}\r\n                        emptyTemplate={<p>Drag an image file or click to select.</p>}\r\n                        chooseLabel=\"Choose\"\r\n                        uploadLabel=\"Confirm\"\r\n                        cancelLabel=\"Cancel\"\r\n                    />\r\n                    {preview && <img src={preview} alt=\"Preview\" style={{ width: 150, marginTop: 10 }} />}\r\n                </div>\r\n\r\n                <div className=\"flex justify-content-center gap-2\">\r\n                    <Button\r\n                        label=\"Create\"\r\n                        onClick={() => {\r\n                            handleCreateClick(); // קריאה לפונקציה הקיימת\r\n                            setselectedImage(null); \r\n                            setPreview(null); // איפוס preview\r\n                            setName(null);\r\n                        }}\r\n                        className=\"p-button p-button-primary\"\r\n                    />\r\n                    <Button\r\n                        label=\"Cancel\"\r\n                        onClick={() => {\r\n                            setVisibleCreatBook(false);\r\n                            setselectedImage(null);\r\n                            setPreview(null);\r\n                            setName(null);\r\n                        }}\r\n                        className=\"p-button p-button-secondary\"\r\n                    />\r\n                </div>\r\n            </div>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nexport default BookCreate;","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { Button } from 'primereact/button';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { MultiSelect } from 'primereact/multiselect';\r\nimport axios from 'axios';\r\nimport { FileUpload } from \"primereact/fileupload\";\r\n\r\nconst BookUpdate = (props) => {\r\n    const { updateBook, visible, book = {}, setVisible } = props; // ברירת מחדל ל-book\r\n    const [selectedImage, setSelectedImage] = useState(null); // תמונה שנבחרה\r\n    const [preview, setPreview] = useState(book?.image ? `${process.env.REACT_APP_API_URL}${book.image}` : \"\");\r\n    const [grades, setGrades] = useState([]);\r\n    const [selectedGrades, setSelectedGrades] = useState([]);\r\n    const nameRef = useRef(\"\");\r\n    const [name, setName] = useState(book?.name || \"\");\r\n\r\n    // הבאת כיתות זמינות\r\n    const AvailablGrade = async () => {\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}api/grade`);\r\n            if (res.status === 204) {\r\n                setGrades([]);\r\n            } else {\r\n                const gradeOptions = res.data.map((grade) => ({\r\n                    label: grade.name,\r\n                    value: grade.name,\r\n                }));\r\n                setGrades(gradeOptions);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching grades:', error);\r\n            setGrades([]);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        AvailablGrade();\r\n    }, []);\r\n\r\n    // הגדרת כיתות ראשוניות\r\n    useEffect(() => {\r\n        if (book?.grades && book.grades.length > 0) {\r\n            const initialGrades = book.grades.map((grade) => grade.name);\r\n            setSelectedGrades(initialGrades);\r\n        }\r\n    }, [book, grades]);\r\n\r\n    useEffect(() => {\r\n        if (book?.image) {\r\n            setPreview(`${process.env.REACT_APP_API_URL}${book.image}`);\r\n        }\r\n    }, [book.image]);\r\n    \r\n    // העלאת תמונה חדשה\r\n    const handleImageUpload = (e) => {\r\n        const file = e.files[0];\r\n        if (file) {\r\n            setSelectedImage(file);\r\n            setPreview(URL.createObjectURL(file)); // עדכון תצוגה מקדימה\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Dialog\r\n            visible={visible}\r\n            modal\r\n            header=\"Update Book\"\r\n            style={{ width: '400px', borderRadius: '8px' }}\r\n            onHide={() => {\r\n                setSelectedImage(null);\r\n                setPreview(book.image || \"\");\r\n                setVisible(false);\r\n            }}\r\n        >\r\n            <div className=\"flex flex-column gap-4\" style={{ padding: '1rem' }}>\r\n                {/* שם הספר */}\r\n                <div className=\"flex flex-column gap-2\">\r\n                    <label htmlFor=\"name\" className=\"font-medium\">Name</label>\r\n                    <InputText\r\n                        id=\"name\"\r\n                        placeholder=\"Enter book name\"\r\n                        className=\"p-inputtext-sm\"\r\n                        onChange={(e) => {setName(e.target.value)  }} \r\n                        defaultValue={book?.name || \"\"}\r\n                    />\r\n                </div>\r\n\r\n                {/* כיתות */}\r\n                <div className=\"flex flex-column gap-2\">\r\n                    <label htmlFor=\"grades\" className=\"font-medium\">Grades</label>\r\n                    <MultiSelect\r\n                        id=\"grades\"\r\n                        value={selectedGrades}\r\n                        options={grades}\r\n                        onChange={(e) => setSelectedGrades(e.value)}\r\n                        optionLabel=\"label\"\r\n                        placeholder=\"Select Grades\"\r\n                        display=\"chip\"\r\n                        className=\"w-full md:w-20rem custom-multiselect\"\r\n                    />\r\n                </div>\r\n\r\n                {/* העלאת תמונה */}\r\n                <div className=\"flex flex-column gap-2\">\r\n                    <label htmlFor=\"image\" className=\"font-medium\">Upload New Image</label>\r\n                    <FileUpload\r\n                        name=\"image\"\r\n                        customUpload\r\n                        accept=\"image/*\"\r\n                        maxFileSize={5 * 1024 * 1024}\r\n                        uploadHandler={handleImageUpload}\r\n                        emptyTemplate={<p>Drag an image file or click to select.</p>}\r\n                    />\r\n                    {preview && <img src={preview} alt=\"Preview\" style={{ width: 150, marginTop: 10 }} />}\r\n                </div>\r\n\r\n                {/* כפתורים */}\r\n                <div className=\"flex justify-content-center gap-2\">\r\n                    <Button\r\n                        label=\"Update\"\r\n                        onClick={() => {\r\n                            setName(nameRef.current.value || book.name)\r\n\r\n                            const imageToSend = selectedImage || book.image; // אם אין תמונה חדשה, שולחים את הקיימת\r\n                            updateBook(name, selectedGrades, imageToSend, book);\r\n                            setVisible(false);\r\n                        }}\r\n                        className=\"p-button p-button-primary\"\r\n                    />\r\n                    <Button\r\n                        label=\"Cancel\"\r\n                        onClick={() => {\r\n                            setSelectedImage(null);\r\n                            setPreview(book.image || \"\");\r\n                            setVisible(false);\r\n                        }}\r\n                        className=\"p-button p-button-secondary\"\r\n                    />\r\n                </div>\r\n            </div>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nexport default BookUpdate;","import React, { useState, useEffect } from 'react';\r\nimport { Button } from 'primereact/button';\r\nimport { DataView } from 'primereact/dataview';\r\nimport axios from 'axios';\r\nimport BookCreate from \"./BookCreat\";\r\nimport BookUpdate from './BookUpdate';\r\nimport { useSelector } from \"react-redux\";\r\nimport { useParams } from 'react-router-dom';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../Styles/Grades.css';\r\nimport { ProgressSpinner } from 'primereact/progressspinner';\r\n\r\nexport default function BooksDataView() {\r\n    const [books, setBooks] = useState([]);\r\n    const [layout, setLayout] = useState('grid');\r\n    const [selectedBook, setSelectedBook] = useState({});\r\n    const [flagGradeId, setFlagGradeId] = useState(false);\r\n    const [gradeName, setGradeName] = useState('');\r\n    const [visibleCreatBook, setVisibleCreatBook] = useState(false);\r\n    const [visible, setVisible] = useState(false);\r\n    const { gradeId } = useParams(); // Get gradeId from URL\r\n    const { token } = useSelector((state) => state.token);\r\n    const { user } = useSelector((state) => state.token);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        if (gradeId) {\r\n            getGradeName(gradeId);\r\n            getBooksByGrade(gradeId); // Fetch books for the specific grade\r\n        } else {\r\n            getBooks();\r\n            setGradeName(''); // Fetch all books if no gradeId is provided\r\n        }\r\n    }, [gradeId, flagGradeId]);\r\n\r\n    const getGradeName = async (Id) => {\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}api/grade/${Id}`); // נתיב לשרת לקבלת שם כיתה\r\n            if (res.status === 200) {\r\n                setGradeName(res.data.name); // עדכון שם הכיתה ב-state\r\n            }\r\n        } catch (e) {\r\n            console.error('Error fetching grade name:', e);\r\n            setGradeName(''); // במידה ויש שגיאה, איפוס שם הכיתה\r\n        }\r\n    };\r\n\r\n    const getBooks = async () => {\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}api/book`);\r\n            if (res.status === 200) {\r\n                setBooks(res.data);\r\n            }\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    };\r\n\r\n    const getBooksByGrade = async (Id) => {\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}api/book/grade/${Id}`\r\n            );\r\n            if (res.status === 200) {\r\n                setBooks(res.data);\r\n            }\r\n        } catch (e) {\r\n            if (e.status === 400) {\r\n                alert(\"there are no book for this grade\")\r\n            }\r\n        }\r\n    };\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const deleteBook = async (bookId) => {\r\n        setLoading(true)\r\n        try {\r\n            const res = await axios.delete(`${process.env.REACT_APP_API_URL}api/book/${bookId}`, {\r\n                headers: { 'Authorization': `Bearer ${token}` }\r\n            });\r\n            setFlagGradeId(!flagGradeId)\r\n        } catch (err) {\r\n            console.error('Error deleting book:', err);\r\n        }finally {\r\n            setLoading(false);\r\n          }\r\n    };\r\n\r\n    const updateBook = async (name, selectedItem, image, book) => {\r\n        setLoading(true)\r\n\r\n        const updatebook = {\r\n            ...book,\r\n            name: name ? name : book.name,\r\n            grades: selectedItem,\r\n            image: image ? image : book.image,\r\n        };\r\n        try {\r\n            const res = await axios.put(`${process.env.REACT_APP_API_URL}api/book`, updatebook, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`,\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            });\r\n            if (res.status === 200) {\r\n                setFlagGradeId(!flagGradeId)\r\n            }\r\n        } catch (e) {\r\n\r\n            console.error(e);\r\n        }finally {\r\n            setLoading(false);\r\n          }\r\n    };\r\n\r\n    const createBook = async (name, selectedItem, image) => {\r\n        setLoading(true)\r\n        if (!image)\r\n            alert(\"confirm the image\")\r\n        const formData = new FormData();\r\n        formData.append('name', name);\r\n        formData.append('grades', JSON.stringify(selectedItem));\r\n        formData.append('image', image); // הוספת הקובץ ל-FormData\r\n        try {\r\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}api/book`, formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`,\r\n                    'Content-Type': 'multipart/form-data' // הגדרת התוכן כ-multipart\r\n                },\r\n            });\r\n            if (res.status === 200 || res.status === 201) {\r\n                if (gradeId) {\r\n                    getBooksByGrade(gradeId);\r\n                } else {\r\n                    getBooks();\r\n                }\r\n            }\r\n        } catch (e) {\r\n            alert(e.res.data.mes)\r\n            if (e.status === 400)\r\n                console.error(\"Error creating book:\", e);\r\n            if (e.status === 402)\r\n                alert(\"this book name alrady exits\")\r\n        }finally {\r\n            setLoading(false);\r\n          }\r\n    };\r\n\r\n    const handleNavigation = (id) => {\r\n        if (!token) {\r\n            alert('You are not allowed to view the book files.')\r\n        }\r\n        else {\r\n            navigate(`/titles/${id}`);\r\n            // אם המשתמש אינו מורשה, מפעיל פונקציה להצגת דיאלוג\r\n        }\r\n    };\r\n\r\n    const gridItem = (book) => (\r\n        <div className=\"col-12 sm:col-6 lg:col-12 xl:col-4 p-2\" key={book._id}>\r\n            <div\r\n                className=\"p-4 border-1 surface-border surface-card border-round\"\r\n                onClick={() => handleNavigation(book._id)}\r\n                style={{ cursor: 'pointer' }}>\r\n                <div className=\"flex flex-column align-items-center gap-3 py-5\">\r\n                    <img\r\n                        className=\"object-cover w-full h-full\"\r\n                        src={`${process.env.REACT_APP_API_URL}${book.image}`}\r\n                        alt={book.name}\r\n                        style={{ objectFit: 'cover', width: '80%', height: '80%' }} // תמונה בגודל קטן יותר\r\n                    />\r\n                    <div className=\"text-2xl font-bold\">{book.name}</div>\r\n                    {book.grades && book.grades.length > 0 && (\r\n                        <>\r\n                            <strong>Suitable for:</strong>\r\n                            <ul className=\"m-0 pl-3 list-disc text-xs\">\r\n                                {book.grades.map((grade, idx) => (\r\n                                    <li key={idx}>{grade.name}</li>\r\n                                ))}\r\n                            </ul>\r\n                        </>\r\n                    )}\r\n                </div>\r\n                <div className=\"card flex flex-wrap gap-2 justify-content-center\">\r\n                    {user?.roles === \"Admin\" && (\r\n                        <>\r\n                            <Button\r\n                                icon=\"pi pi-pencil\"\r\n                                onClick={(e) => {\r\n                                    e.stopPropagation();\r\n                                    setVisible(true);\r\n                                    setSelectedBook(book);\r\n                                }}\r\n                                tooltip=\"Edit\"\r\n                            />\r\n                            <Button\r\n                                icon=\"pi pi-trash\"\r\n                                onClick={(e) => {\r\n                                    e.stopPropagation();\r\n                                    deleteBook(book._id);\r\n                                }}\r\n                                tooltip=\"Delete\"\r\n                            />\r\n                        </>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    const itemTemplate = (book, layout, index) => {\r\n        if (!book) return;\r\n        return layout === 'list' ? gridItem(book) : gridItem(book);\r\n    };\r\n\r\n    const listTemplate = (books, layout) => (\r\n        <div className=\"grid grid-nogutter\">\r\n            {books.map((book, index) => itemTemplate(book, layout, index))}\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            {loading && (\r\n                                <div style={{ margin: \"20px\" }}>\r\n                                  <ProgressSpinner style={{ width: '30px', height: '30px' }} strokeWidth=\"5\" />\r\n                                  <p>Wait just a moment please...</p>\r\n                                </div>\r\n                              )}\r\n            <div>\r\n                {gradeName && (\r\n                    <h1 className=\"grade-header\">{gradeName}</h1> // שם הכיתה בראש\r\n                )}\r\n            </div>\r\n            {user?.roles === \"Admin\" && (\r\n                <Button icon=\"pi pi-plus\" rounded aria-label=\"Filter\" onClick={() => setVisibleCreatBook(true)} className=\"add-button\" />)}\r\n            <BookCreate createBook={createBook} setVisibleCreatBook={setVisibleCreatBook} visibleCreatBook={visibleCreatBook} />\r\n            <div className=\"card\">\r\n                <DataView value={Array.isArray(books) ? books : []} listTemplate={listTemplate} layout={layout} />\r\n            </div>\r\n            {selectedBook ? <BookUpdate updateBook={updateBook} setVisible={setVisible} visible={visible} book={selectedBook} /> : <></>}\r\n        \r\n        </div>\r\n    );\r\n}"],"names":["props","createBook","visibleCreatBook","setVisibleCreatBook","token","useSelector","state","name","setName","useState","selectedGrades","setSelectedGrades","grades","setGrades","nameError","setNameError","imageError","setImageError","selectedimage","setselectedImage","preview","setPreview","gradeId","useParams","useEffect","async","res","axios","get","concat","process","headers","status","gradeOptions","data","map","grade","label","value","id","_id","selectedGrade","find","error","console","AvailablGrade","_jsx","Dialog","visible","modal","header","style","width","borderRadius","onHide","children","_jsxs","className","padding","htmlFor","InputText","type","onChange","e","target","placeholder","MultiSelect","options","optionLabel","display","virtualScrollerOptions","itemSize","FileUpload","customUpload","accept","maxFileSize","uploadHandler","file","files","URL","createObjectURL","emptyTemplate","chooseLabel","uploadLabel","cancelLabel","src","alt","marginTop","Button","onClick","updateBook","book","setVisible","selectedImage","setSelectedImage","image","nameRef","useRef","length","initialGrades","defaultValue","current","imageToSend","BooksDataView","books","setBooks","layout","setLayout","selectedBook","setSelectedBook","flagGradeId","setFlagGradeId","gradeName","setGradeName","user","navigate","useNavigate","getGradeName","getBooksByGrade","getBooks","Id","alert","loading","setLoading","gridItem","handleNavigation","cursor","objectFit","height","_Fragment","idx","roles","icon","stopPropagation","tooltip","delete","bookId","err","deleteBook","margin","ProgressSpinner","strokeWidth","rounded","BookCreate","selectedItem","formData","FormData","append","JSON","stringify","post","mes","DataView","Array","isArray","listTemplate","index","itemTemplate","BookUpdate","updatebook","_objectSpread","put"],"sourceRoot":""}