{"version":3,"file":"static/js/911.1eca8c25.chunk.js","mappings":"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","sources":["Components/UserProfile.jsx","Components/Users.jsx"],"sourcesContent":["import React from 'react';\r\n import { Avatar } from 'primereact/avatar';\r\n \r\n const getColorFromName = (name) => {\r\n     const colors = ['#007ad9', '#ff5722', '#4caf50', '#9c27b0', '#e91e63', '#ffc107', '#673ab7'];\r\n     const index = name.toLowerCase().charCodeAt(0) % colors.length;  // חשב צבע על פי האות הראשונה בשם\r\n     return colors[index];\r\n };\r\n \r\n const UserProfile = ({ name }) => {\r\n     const firstLetter = name ? name.charAt(0).toUpperCase() : '';\r\n     const backgroundColor = getColorFromName(name);\r\n \r\n     return (\r\n         <div className=\"flex align-items-center\">\r\n             <Avatar label={firstLetter} size=\"large\" className=\"mr-2\" style={{ backgroundColor, color: 'white', borderRadius: '50%' }} />\r\n             <span className=\"font-bold\">{name}</span>\r\n         </div>\r\n     );\r\n };\r\n \r\n export default UserProfile;","import { Button } from 'primereact/button';\r\nimport 'primeicons/primeicons.css';\r\nimport axios from 'axios';\r\nimport { useRef } from 'react';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { PickList } from 'primereact/picklist';\r\nimport UserProfile from './UserProfile';\r\nimport { FaTrashAlt } from 'react-icons/fa';\r\nimport \"../Styles/Users.css\";\r\nimport { Toast } from 'primereact/toast';\r\nimport { confirmDialog } from 'primereact/confirmdialog';\r\nimport { ConfirmDialog } from 'primereact/confirmdialog';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { getConfig } from '../config';\r\n\r\nconst Users = () => {\r\n    const navigate = useNavigate();\r\n    const { token } = useSelector((state) => state.token);\r\n    const { user } = useSelector((state) => state.token);\r\n    const [source, setSource] = useState([]);\r\n    const [target, setTarget] = useState([]);\r\n    const toast = useRef(null)\r\n    const [sourceSelection, setSourceSelection] = useState([]);\r\n    const [targetSelection, setTargetSelection] = useState([]);\r\n    const apiUrl = getConfig().API_URL;\r\n\r\n    const getUsers = async () => {\r\n        try {\r\n            const res = await axios.get(`${apiUrl}api/user`, {\r\n                headers: { 'Authorization': `Bearer ${token}` }\r\n            });\r\n            if (res.status === 200) {\r\n                const confirmedUsers = res.data.filter(user => (user.confirm === true && user.roles !== 'Admin'));\r\n                const notConfirmedUsers = res.data.filter(user => (user.confirm === false && user.roles !== 'Admin'));\r\n                setSource(notConfirmedUsers);\r\n                setTarget(confirmedUsers);\r\n            }\r\n        } catch (e) {\r\n            toast.current.show({ severity: 'error', summary: 'Error', detail: 'Error loading users', life: 3000 });\r\n        }\r\n    };\r\n\r\n    const createUser = async (nameRef, emailRef, phoneRef, passwordRef) => {\r\n        const newUser = {\r\n            name: nameRef.current.value ? nameRef.current.value : \" \",\r\n            email: emailRef.current.value ? emailRef.current.value : \"\",\r\n            phone: phoneRef.current.value ? phoneRef.current.value : \" \",\r\n            password: passwordRef.current.value ? passwordRef.current.value : \" \"\r\n        };\r\n        try {\r\n            const res = await axios.post(`${apiUrl}api/user`, newUser, {\r\n                headers: { 'Authorization': `Bearer ${token}` }\r\n            });\r\n            if (res.status === 200 || res.status === 201) {\r\n                toast.current.show({ severity: 'success', summary: 'Success', detail: 'User created successfully', life: 3000 });\r\n                navigate('/login');\r\n            }\r\n        } catch (e) {\r\n            toast.current.show({ severity: 'error', summary: 'Error', detail: 'Error loading/deleting/confirming user', life: 3000 });\r\n        }\r\n    };\r\n\r\n    const confirmDeleteUser = (id) => {\r\n        confirmDialog({\r\n            message: 'Are you sure you want to delete this user?',\r\n            header: 'Delete Confirmation',\r\n            icon: 'pi pi-exclamation-triangle',\r\n            acceptLabel: 'Yes',\r\n            rejectLabel: 'No',\r\n            accept: () => deleteUser(id),\r\n            reject: () => {\r\n                toast.current.show({ severity: 'info', summary: 'Cancelled', detail: 'Deletion canceled', life: 3000 });\r\n            }\r\n        });\r\n    };\r\n\r\n    const deleteUser = async (id) => {\r\n        try {\r\n            const res = await axios.delete(`${apiUrl}api/user/${id}`, {\r\n                headers: { 'Authorization': `Bearer ${token}` }\r\n            });\r\n            if (res.status === 200) {\r\n                setSource(prevSource => prevSource.filter(user => user._id !== res.data._id));\r\n                setTarget(prevTarget => prevTarget.filter(user => user._id !== res.data._id));\r\n                toast.current.show({ severity: 'success', summary: 'Success', detail: 'User deleted', life: 3000 });\r\n            }\r\n        } catch (e) {\r\n            toast.current.show({ severity: 'error', summary: 'Error', detail: 'Error loading/deleting/confirming user', life: 3000 });\r\n        }\r\n    };\r\n\r\n    const confirmUser = async (id) => {\r\n        try {\r\n            const _id = id;\r\n            const res = await axios.put(`${apiUrl}api/user/confirm`, { _id }, {\r\n                headers: { 'Authorization': `Bearer ${token}` }\r\n            });\r\n            if (res.status === 200) {\r\n            }\r\n        } catch (e) {\r\n            toast.current.show({ severity: 'error', summary: 'Error', detail: 'Error loading/deleting/confirming user', life: 3000 });\r\n        }\r\n    }\r\n\r\n    const onChange = (event) => {\r\n        const movedToTarget = event.target.filter(user => !target.some(u => u._id === user._id));\r\n        const movedToSource = event.source.filter(user => !source.some(u => u._id === user._id));\r\n        movedToTarget.forEach(user => confirmUser(user._id));\r\n        movedToSource.forEach(user => confirmUser(user._id));\r\n        setSource(event.source);\r\n        setTarget(event.target);\r\n        setSourceSelection([]);\r\n        setTargetSelection([]);\r\n    };\r\n\r\n    const itemTemplate = (item) => {\r\n        return (\r\n            <div className=\"flex flex-wrap p-2 align-items-center gap-3\">\r\n                <UserProfile name={item.name}></UserProfile>\r\n                <span className=\"font-semibold\">{item.email}</span>\r\n                <span className=\"font-semibold\">{item.phone}</span>\r\n                <FaTrashAlt size={20} className=\"delete-icon\" onClick={() => confirmDeleteUser(item._id)} />\r\n            </div>\r\n        );\r\n    };\r\n\r\n    useEffect(() => {\r\n        getUsers();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <Toast ref={toast} />\r\n            <ConfirmDialog />\r\n            <PickList\r\n                dataKey=\"_id\"\r\n                source={source}\r\n                target={target}\r\n                onChange={onChange}\r\n                itemTemplate={itemTemplate}\r\n                selection={sourceSelection}\r\n                onSelectionChange={(e) => {\r\n                    setSourceSelection(e.sourceSelection);\r\n                    setTargetSelection(e.targetSelection);\r\n                }}\r\n                filter\r\n                filterBy=\"name\"\r\n                breakpoint=\"1280px\"\r\n                sourceHeader=\"Not Confirmed\"\r\n                targetHeader=\"Confirmed\"\r\n                sourceStyle={{ height: '24rem' }}\r\n                targetStyle={{ height: '24rem' }}\r\n                sourceFilterPlaceholder=\"Search by name\"\r\n                targetFilterPlaceholder=\"Search by name\"\r\n            />\r\n        </div>\r\n    );\r\n};\r\nexport default Users;\r\n\r\n"],"names":["_ref","name","firstLetter","charAt","toUpperCase","backgroundColor","colors","toLowerCase","charCodeAt","length","getColorFromName","_jsxs","className","children","_jsx","Avatar","label","size","style","color","borderRadius","Users","useNavigate","token","useSelector","state","user","source","setSource","useState","target","setTarget","toast","useRef","sourceSelection","setSourceSelection","targetSelection","setTargetSelection","apiUrl","getConfig","API_URL","deleteUser","async","res","axios","delete","concat","id","headers","status","prevSource","filter","_id","data","prevTarget","current","show","severity","summary","detail","life","e","confirmUser","put","useEffect","get","confirmedUsers","confirm","roles","notConfirmedUsers","getUsers","Toast","ref","ConfirmDialog","PickList","dataKey","onChange","event","movedToTarget","some","u","movedToSource","forEach","itemTemplate","item","UserProfile","email","phone","FaTrashAlt","onClick","confirmDeleteUser","confirmDialog","message","header","icon","acceptLabel","rejectLabel","accept","reject","selection","onSelectionChange","filterBy","breakpoint","sourceHeader","targetHeader","sourceStyle","height","targetStyle","sourceFilterPlaceholder","targetFilterPlaceholder"],"sourceRoot":""}