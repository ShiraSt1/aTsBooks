{"version":3,"file":"static/js/892.7f4c48c9.chunk.js","mappings":"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","sources":["Components/Register.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Password } from 'primereact/password';\r\nimport '../Styles/register.css'\r\nimport { ProgressSpinner } from 'primereact/progressspinner';\r\nimport { getConfig } from '../config';\r\nimport { Toast } from 'primereact/toast';\r\n\r\nconst Register = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [phone, setPhone] = useState('');\r\n    const [name, setName] = useState('');\r\n    const navigate = useNavigate();\r\n    const [loading, setLoading] = useState(false);\r\n    const apiUrl = getConfig().API_URL;\r\n    const [errors, setErrors] = useState({\r\n        email: \"\",\r\n        name: \"\",\r\n        password: \"\",\r\n        phone: \"\",\r\n    });\r\n    const toast = useRef(null);\r\n\r\n    const createUser = async (name, email, phone, password) => {\r\n        setLoading(true);\r\n        const newUser = { name, email, phone, password };\r\n        try {\r\n            const res = await axios.post(`${apiUrl}api/user/register`, newUser);\r\n\r\n            if (res.status === 409) {\r\n                toast.current.show({ severity: 'error', detail: 'This email already has an acount.', life: 3000 });\r\n            }\r\n\r\n            else if (res.status === 200 || res.status === 201) {\r\n                navigate('/login')\r\n            }\r\n        } catch (e) {\r\n            toast.current.show({ severity: 'error', detail: 'An error acured while sighning up. Please try again later.', life: 3000 });\r\n            console.error(e);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        validateEmail(email); //****\r\n        validateName(name); //****\r\n        validatePassword(password); //****\r\n    }, [email, name, password]);\r\n\r\n    const validateEmail = (value) => {\r\n        setEmail(value);\r\n        if (!value) {\r\n            setErrors((prev) => ({ ...prev, email: \"This field is required\" }));\r\n        } else if (!/^\\S+@\\S+\\.\\S+$/.test(value)) {\r\n            setErrors((prev) => ({ ...prev, email: \"Enter a valid email address\" }));\r\n        } else {\r\n            setErrors((prev) => ({ ...prev, email: \"\" }));\r\n        }\r\n    };\r\n\r\n    const validateName = (value) => {\r\n        setName(value);\r\n        if (!value) {\r\n            setErrors((prev) => ({ ...prev, name: \"This field is required\" }));\r\n        } else if (value.length < 4) {\r\n            setErrors((prev) => ({ ...prev, name: \"At least 4 characters required\" }));\r\n        } else {\r\n            setErrors((prev) => ({ ...prev, name: \"\" }));\r\n        }\r\n    };\r\n\r\n    const validatePassword = (value) => {\r\n        setPassword(value);\r\n        if (!value) {\r\n            setErrors((prev) => ({ ...prev, password: \"This field is required\" }));\r\n        } else if (value.length < 6) {\r\n            setErrors((prev) => ({ ...prev, password: \"Minimum 6 characters required\" }));\r\n        } else {\r\n            setErrors((prev) => ({ ...prev, password: \"\" }));\r\n        }\r\n    };\r\n\r\n    const validatePhone = (value) => {\r\n        if (!/^\\d*$/.test(value)) {\r\n            setErrors((prev) => ({ ...prev, phone: \"The phone number can only contain digits.\" }));\r\n        } else if (value.length > 10) {\r\n            setErrors((prev) => ({ ...prev, phone: \"The phone number can contain up to 10 digits only.\" }));\r\n        } else {\r\n            setErrors((prev) => ({ ...prev, phone: \"\" }));\r\n        }\r\n        setPhone(value);\r\n    };\r\n\r\n    const isFormValid = Object.values(errors).every((error) => error === \"\") &&\r\n        email && name && password;\r\n\r\n    return (\r\n        <div className=\"register-page-container\">\r\n            <Toast ref={toast} />\r\n            <div className=\"register-form-container\">\r\n                {loading && (\r\n                    <div className=\"loading-container\">\r\n                        <ProgressSpinner style={{ width: '30px', height: '30px' }} />\r\n                        <p>Your request is being processed...</p>\r\n                    </div>\r\n                )}\r\n                <h2 className=\"register-title\">Create an Account</h2>\r\n                <form className=\"register-form\">\r\n                    <div className=\"register-input-wrapper\">\r\n                        <label className=\"register-label\">Full Name</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={name}\r\n                            onChange={(e) => validateName(e.target.value)}\r\n                            className=\"register-input\"\r\n                            placeholder=\"Enter your full name\"\r\n                        />\r\n                        {errors.name && <small className=\"register-error\">{errors.name}</small>}\r\n                    </div>\r\n\r\n                    <div className=\"register-input-wrapper\">\r\n                        <label className=\"register-label\">Email</label>\r\n                        <input\r\n                            type=\"email\"\r\n                            value={email}\r\n                            onChange={(e) => validateEmail(e.target.value)}\r\n                            className=\"register-input\"\r\n                            placeholder=\"Enter your email address\"\r\n                        />\r\n                        {errors.email && <small className=\"register-error\">{errors.email}</small>}\r\n                    </div>\r\n\r\n                    <div className=\"register-input-wrapper\">\r\n                        <label className=\"register-label\">Password</label>\r\n                        <Password\r\n                            value={password}\r\n                            inputClassName=\"register-input\"\r\n                            onChange={(e) => validatePassword(e.target.value)}\r\n                            placeholder=\"Enter your password\"\r\n                            toggleMask\r\n                            feedback={false}\r\n                        />\r\n                        {errors.password && <small className=\"register-error\">{errors.password}</small>}\r\n                    </div>\r\n\r\n                    <div className=\"register-input-wrapper\">\r\n                        <label className=\"register-label\">Phone Number</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={phone}\r\n                            onChange={(e) => validatePhone(e.target.value)}\r\n                            className=\"register-input\"\r\n                            placeholder=\"Enter your phone number\"\r\n                        />\r\n                        {errors.phone && <small className=\"register-error\">{errors.phone}</small>}\r\n                    </div>\r\n                    <small>*Your request to join will be sent to Tami Stern. You’ll receive an email once it’s approved.</small>\r\n                    <button\r\n                        type=\"button\"\r\n                        onClick={() => createUser(name, email, phone, password)}\r\n                        className=\"register-button\"\r\n                        disabled={!isFormValid}>\r\n                        Register\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Register;"],"names":["Register","email","setEmail","useState","password","setPassword","phone","setPhone","name","setName","navigate","useNavigate","loading","setLoading","apiUrl","getConfig","API_URL","errors","setErrors","toast","useRef","useEffect","validateEmail","validateName","validatePassword","value","test","prev","_objectSpread","length","isFormValid","Object","values","every","error","_jsxs","className","children","_jsx","Toast","ref","ProgressSpinner","style","width","height","type","onChange","e","target","placeholder","Password","inputClassName","toggleMask","feedback","validatePhone","onClick","async","newUser","res","axios","post","concat","status","current","show","severity","detail","life","console","createUser","disabled"],"sourceRoot":""}