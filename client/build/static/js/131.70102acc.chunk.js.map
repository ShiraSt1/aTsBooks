{"version":3,"file":"static/js/131.70102acc.chunk.js","mappings":"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","sources":["Components/GradeUpdate.jsx","Components/Grade.jsx","Components/GradeCreat.jsx","Components/Grades.jsx"],"sourcesContent":["import React, { useRef, useState,useEffect } from \"react\";\r\nimport { Button } from 'primereact/button';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { AutoComplete } from \"primereact/autocomplete\";\r\n\r\nconst UpdateGrade = (props) => {\r\n    const [selectedItem, setSelectedItem] = useState(null);\r\n    const items = ['first grade', 'second grade', 'third grade', 'fourth grade', 'fifth grade', 'sixth grade', 'seventh grade', 'eighth grade'];\r\n    const [filteredItems, setFilteredItems] = useState(null);\r\n    const { updateGrade, visible, setVisible, grade } = props;\r\n    const nameRef = useRef(\"\");\r\n    const imageRef = useRef(\"\");\r\n\r\n    useEffect(() => {\r\n        if (grade) {\r\n            setSelectedItem(grade.name); // הגדרת הכיתה הנוכחית\r\n        }\r\n    }, [grade]); // יפעל מחדש אם הערך של grade משתנה\r\n\r\n    const searchItems = (event) => {\r\n        setFilteredItems(items);\r\n    };\r\n\r\n    return (\r\n        <Dialog\r\n            visible={visible}\r\n            modal\r\n            header=\"Update Grade\"\r\n            style={{ width: '400px', borderRadius: '8px' }}\r\n            onHide={() => setVisible(false)}\r\n            onClick={(e) => e.stopPropagation()} // מונע את הפיכת הדיאלוג לקישור\r\n        >\r\n            <div className=\"flex flex-column gap-4\" style={{ padding: '1rem' }}>\r\n                <div className=\"flex flex-column gap-2\">\r\n                    <label htmlFor=\"name\" className=\"font-medium\">Name</label>\r\n                    <AutoComplete\r\n                        id=\"name\"\r\n                        value={selectedItem}\r\n                        suggestions={filteredItems}\r\n                        completeMethod={searchItems}\r\n                        dropdown\r\n                        onChange={(e) => setSelectedItem(e.value)}\r\n                        placeholder=\"Select grade\"\r\n                        className=\"p-inputtext-sm\"\r\n                    />\r\n                </div>\r\n                <div className=\"flex justify-content-center gap-2\">\r\n                    <Button\r\n                        label=\"Update\"\r\n                        onClick={(e) => {\r\n                            e.stopPropagation()\r\n                            updateGrade(selectedItem);\r\n                            setVisible(false);\r\n                        }}\r\n                        className=\"p-button p-button-primary\"\r\n                    />\r\n                    <Button\r\n                        label=\"Cancel\"\r\n                        onClick={(e) => \r\n                            {e.stopPropagation()\r\n                            setVisible(false)}}\r\n                        className=\"p-button p-button-secondary\"\r\n                    />\r\n                </div>\r\n            </div>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nexport default UpdateGrade;","import { useState } from \"react\"\r\nimport { Button } from 'primereact/button';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Toast } from 'primereact/toast';\r\nimport { ConfirmDialog } from 'primereact/confirmdialog';\r\nimport { confirmDialog } from 'primereact/confirmdialog';\r\nimport { useRef } from 'react';\r\nimport UpdateGrade from \"./GradeUpdate\"\r\nimport 'primeicons/primeicons.css';\r\nimport axios from 'axios'\r\nimport '../Grade.css';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Grade = (props) => {\r\n    const [visible, setVisible] = useState(false);\r\n    const toast = useRef(null);\r\n    const { token } = useSelector((state) => state.token);\r\n    const { user } = useSelector((state) => state.token);\r\n    const navigate = useNavigate();\r\n\r\n    //**********updateGrade\r\n    const updateGrade = async (selectedItem, imageRef) => {\r\n        const updatedGrade = {\r\n            ...props.grade,\r\n            name: selectedItem,\r\n            // image: imageRef.current.value ? imageRef.current.value : props.grade.body,\r\n        };\r\n        try {\r\n            const res = await axios.put(`${process.env.REACT_APP_API_URL}api/grade`, updatedGrade, {\r\n                headers: { 'Authorization': `Bearer ${token}` }\r\n            })\r\n            if (res.status === 200) {\r\n                props.setGradesData(res.data)\r\n                if (toast?.current) {\r\n                    toast.current.show({ severity: 'success', summary: 'Updated successfully', life: 3000 });\r\n                }\r\n            }\r\n        } catch (e) {\r\n            if (e.status === 409) {\r\n                if (toast?.current) {\r\n                    toast.current.show({ severity: 'error', summary: 'This grade alredy exits', life: 4000 });\r\n                }\r\n            }\r\n            if (e.status === 400)\r\n                if (toast?.current) {\r\n                    toast.current.show({ severity: 'error', summary: 'Grade name is required', life: 4000 });\r\n                }\r\n            console.error(e)\r\n        }\r\n    }\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const deleteGrade = async (id) => {\r\n        try {\r\n            const res = await axios.delete(`${process.env.REACT_APP_API_URL}api/grade/${id}`, {\r\n                headers: { 'Authorization': `Bearer ${token}` }\r\n            });\r\n            if (Array.isArray(res.data)) {\r\n                props.setGradesData(res.data);\r\n                if (toast.current) {\r\n                    toast.current.show({ severity: 'success', summary: 'Deleted successfuly', life: 3000 });\r\n                }\r\n\r\n            }\r\n        } catch (e) {\r\n            toast.current.show({\r\n                severity: 'error',\r\n                summary: 'Error deleting',\r\n                detail: e.response?.data?.message || e.message,\r\n                life: 4000\r\n            });\r\n        }\r\n        finally {\r\n            setIsLoading(false); // להחזיר את המצב לאחר סיום הפעולה\r\n        }\r\n    };\r\n\r\n    const [iDdeleteBook, setIDdeleteBook] = useState(null);\r\n    const [deletflage, setDeletflage] = useState(false);\r\n\r\n    const confirmDeleteGrade = (id) => {\r\n        confirmDialog({\r\n            message: 'Are you sure you want to delete this grade and all the files in it?',\r\n            header: 'Delete Confirmation',\r\n            icon: 'pi pi-exclamation-triangle',\r\n            acceptLabel: 'Yes',\r\n            rejectLabel: 'No',\r\n            accept: () => deleteGrade(id),\r\n            reject: () => {\r\n                toast.current.show({ severity: 'info', summary: 'Cancelled', detail: 'Deletion canceled', life: 3000 });\r\n            }\r\n        });\r\n    };\r\n\r\n    const footer = (\r\n        <div className=\"card flex flex-wrap gap-2 justify-content-center\">\r\n            {user?.roles === \"Admin\" && (\r\n                <>\r\n                    <Button icon=\"pi pi-times\" label=\"Delete\" onClick={(e) => {\r\n                        e.stopPropagation()\r\n                        deleteGrade(props.grade._id)\r\n                    }} />\r\n\r\n                    <Button label=\"Update\" icon=\"pi pi-pencil\" onClick={(e) => {\r\n                        e.stopPropagation()\r\n                        setVisible(true)\r\n                    }} /></>)}\r\n            <UpdateGrade updateGrade={updateGrade} setVisible={setVisible} visible={visible} grade={props.grade} />\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <Toast ref={toast} />\r\n            <ConfirmDialog />\r\n            <div className=\"col-12 sm:col-6 lg:col-12 xl:col-4 p-2\" key={props.grade._id}>\r\n\r\n                <div\r\n                    className=\"p-4 border-1 surface-border surface-card border-round\"\r\n                    onClick={() => navigate(`/books/${props.grade._id}`)}\r\n                    style={{ cursor: 'pointer' }}>\r\n\r\n                    <div className=\"flex flex-column align-items-center gap-3 py-5\">\r\n                        <img className=\"course-image\" src={`/pictures/${props.grade.name}.png `} alt={props.grade.name} footer={footer} />\r\n                        <div className=\"text-2xl font-bold\">{props.grade.name} {footer}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Grade","import React, { useState, useRef } from \"react\";\r\nimport { Button } from 'primereact/button';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { AutoComplete } from \"primereact/autocomplete\";\r\n\r\nconst CreateGrade = (props) => {\r\n    const [selectedItem, setSelectedItem] = useState(null);\r\n    const items = ['first grade', 'second grade', 'third grade', 'fourth grade', 'fifth grade', 'sixth grade', 'seventh grade', 'eighth grade'];\r\n    const [filteredItems, setFilteredItems] = useState(null);\r\n    const { createGrade, visibleCreatGrade } = props;\r\n    const searchItems = (event) => {\r\n        setFilteredItems(items);\r\n    };\r\n    const imageRef = useRef(\"\");\r\n    return (\r\n        <Dialog\r\n            visible={visibleCreatGrade}\r\n            modal\r\n            onHide={() => props.setVisibleCreatGrade(false)}\r\n            style={{ width: '25rem', borderRadius: '8px' }} // התאמת רוחב הדיאלוג\r\n            className=\"custom-dialog\"\r\n        >\r\n            <div className=\"flex flex-column gap-4 p-4\">\r\n                {/* Name Input */}\r\n                <div className=\"flex flex-column gap-2\">\r\n                    <label className=\"text-gray-700 font-medium\">Name</label>\r\n                    <AutoComplete\r\n                        value={selectedItem}\r\n                        suggestions={filteredItems}\r\n                        completeMethod={searchItems}\r\n                        virtualScrollerOptions={{ itemSize: 38 }}\r\n                        dropdown\r\n                        onChange={(e) => setSelectedItem(e.value)}\r\n                        className=\"p-inputtext p-3 border border-gray-300 rounded-md w-full\"\r\n                    />\r\n                </div>\r\n                {/* Buttons */}\r\n                <div className=\"flex justify-content-between gap-3\">\r\n                    <Button\r\n                        label=\"Create\"\r\n                        onClick={(e) => { createGrade(selectedItem, imageRef); props.setVisibleCreatGrade(false); }}\r\n                        className=\"bg-indigo-500 text-white px-5 py-2 rounded-md hover:bg-indigo-600\"\r\n                    />\r\n                    <Button\r\n                        label=\"Cancel\"\r\n                        onClick={() => props.setVisibleCreatGrade(false)}\r\n                        className=\"bg-gray-500 text-white px-5 py-2 rounded-md hover:bg-gray-600\"\r\n                    />\r\n                </div>\r\n            </div>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nexport default CreateGrade;","import { useEffect, useState, useRef } from \"react\"\r\nimport { Button } from 'primereact/button';\r\nimport 'primeicons/primeicons.css';\r\nimport axios from 'axios'\r\nimport Grade from \"./Grade\"\r\nimport CreateGrade from \"./GradeCreat\"\r\nimport { DataView, DataViewLayoutOptions } from 'primereact/dataview';\r\nimport { useSelector } from \"react-redux\";\r\nimport { Toast } from 'primereact/toast';\r\nimport '../Styles/Grades.css';\r\n\r\nconst Grades = () => {\r\n    const { token } = useSelector((state) => state.token);\r\n    const { user } = useSelector((state) => state.token);\r\n    const [gradesData, setGradesData] = useState([])\r\n    const [visibleCreatGrade, setVisibleCreatGrade] = useState(false);\r\n    const toast = useRef(null);\r\n\r\n    //GET - getAllGrades/\r\n    const getGrades = async () => {\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}api/grade`)\r\n            if (res.status === 200) {\r\n                setGradesData(res.data)\r\n            }\r\n        } catch (e) {\r\n            console.error(e)\r\n        }\r\n    }\r\n\r\n    const getGradeById = async (id) => {\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}api/grade/${id}`)\r\n        } catch (e) {\r\n            console.error(e)\r\n        }\r\n    }\r\n\r\n    //******Grade - createGrade***** */\r\n    const createGrade = async (selectedItem, imageRef) => {\r\n        const newGrade = {\r\n            name: selectedItem,\r\n            image: imageRef.current.value ? imageRef.current.value : \" \"\r\n        }\r\n        try {\r\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}api/grade`, newGrade, {\r\n                headers: { 'Authorization': `Bearer ${token}` }\r\n            })\r\n            if (res.status === 201) {\r\n                getGrades()\r\n            }\r\n        }\r\n        catch (e) {\r\n            if (e.status === 409) {\r\n                if (toast?.current) {\r\n                    toast.current.show({ severity: 'error', summary: 'This grade alredy exits', life: 4000 });\r\n                }\r\n            }\r\n            if (e.status === 400)\r\n                if (toast?.current) {\r\n                    toast.current.show({ severity: 'error', summary: 'Grade name is required', life: 4000 });\r\n                }\r\n            console.error(e)\r\n        }\r\n    }\r\n\r\n    //********useEffect\r\n    useEffect(() => {\r\n        getGrades()\r\n    }, [])\r\n\r\n    const itemTemplate = (grade, index) => {\r\n        if (!grade) {\r\n            return;\r\n        }\r\n        return <Grade grade={grade} getGrades={getGrades} setGradesData={setGradesData} />;\r\n    };\r\n\r\n    const listTemplate = (gradesData) => {\r\n        return <div className=\"grid grid-nogutter\">{gradesData.map((grade, index) => itemTemplate(grade, index))}</div>;\r\n    };\r\n\r\n    return (<>\r\n        <Toast ref={toast} />\r\n        {user?.roles === \"Admin\" && (\r\n            <Button icon=\"pi pi-plus\" rounded aria-label=\"Filter\" onClick={() => setVisibleCreatGrade(true)} className=\"add-button\" />)}\r\n        <CreateGrade createGrade={createGrade} setVisibleCreatGrade={setVisibleCreatGrade} visibleCreatGrade={visibleCreatGrade} />\r\n        <div className=\"card\">\r\n            <DataView value={gradesData} listTemplate={listTemplate} />\r\n        </div>\r\n    </>)\r\n}\r\n\r\nexport default Grades"],"names":["props","selectedItem","setSelectedItem","useState","items","filteredItems","setFilteredItems","updateGrade","visible","setVisible","grade","useRef","useEffect","name","_jsx","Dialog","modal","header","style","width","borderRadius","onHide","onClick","e","stopPropagation","children","_jsxs","className","padding","htmlFor","AutoComplete","id","value","suggestions","completeMethod","event","dropdown","onChange","placeholder","Button","label","toast","token","useSelector","state","user","navigate","useNavigate","isLoading","setIsLoading","deleteGrade","async","res","axios","delete","concat","process","headers","Array","isArray","data","setGradesData","current","show","severity","summary","life","_e$response","_e$response$data","detail","response","message","iDdeleteBook","setIDdeleteBook","deletflage","setDeletflage","footer","roles","_Fragment","icon","_id","UpdateGrade","imageRef","updatedGrade","_objectSpread","put","status","console","error","Toast","ref","ConfirmDialog","cursor","src","alt","createGrade","visibleCreatGrade","setVisibleCreatGrade","virtualScrollerOptions","itemSize","Grades","gradesData","getGrades","get","rounded","CreateGrade","newGrade","image","post","DataView","listTemplate","map","index","itemTemplate","Grade"],"sourceRoot":""}