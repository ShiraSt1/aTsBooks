{"version":3,"file":"static/js/742.784880bd.chunk.js","mappings":"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","sources":["Components/FileView.jsx"],"sourcesContent":["import { useParams } from 'react-router-dom';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { getConfig } from '../config';\r\nimport { Toast } from 'primereact/toast';\r\n\r\nconst FileView = () => {\r\n  const { fileId } = useParams();\r\n  const [fileUrl, setFileUrl] = useState('');\r\n  const [fileType, setFileType] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const { token } = useSelector((state) => state.token);\r\n  const { user } = useSelector((state) => state.token);\r\n  const apiUrl = getConfig().API_URL;\r\n  const toast = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (fileId)\r\n      fetchFile()\r\n  }, [fileId]);\r\n\r\n  const fetchFile = async () => {\r\n    try {\r\n      const response = await axios.get(`${apiUrl}api/file/view/${fileId}`, {\r\n        headers: { 'Authorization': `Bearer ${token}` }, // הוספת הטוקן ב-Headers\r\n      });\r\n      const { url, name, contentType } = response.data;\r\n      const extension = fileId.split('.').pop().toLowerCase();\r\n      \r\n      let type = 'iframe';\r\n      if (['mp4', 'webm'].includes(extension)) type = 'video';\r\n      else if (['mp3', 'wav', 'ogg'].includes(extension)) type = 'audio';\r\n      else if (['jpg', 'jpeg', 'png', 'gif', 'bmp', 'svg'].includes(extension)) type = 'image';\r\n      else if (['pdf'].includes(extension)) type = 'pdf';\r\n      else if (['txt', 'doc', 'docx'].includes(extension)) type = 'document';\r\n      else setFileType('iframe');\r\n\r\n      setFileUrl(url);\r\n      setFileType(type);\r\n      setLoading(false);\r\n    }\r\n    catch (err) {\r\n      console.error(\"Error in loading file\", err);\r\n      toast.current.show({ severity: 'error', detail: 'Error in loading file.', life: 3000 });\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  const renderFile = () => {\r\n    switch (fileType) {\r\n      case 'video':\r\n        return (\r\n          <video controls width=\"100%\" height=\"100%\">\r\n            <source src={fileUrl} type=\"video/mp4\" />\r\n            Your browser does not support video files.\r\n          </video>\r\n        );\r\n      case 'audio':\r\n        return (\r\n          <audio controls style={{ width: '100%' }}>\r\n            <source src={fileUrl} type=\"audio/mpeg\" />\r\n            Your browser does not support audio files.\r\n          </audio>\r\n        );\r\n      case 'image':\r\n        return <img src={fileUrl} alt=\"תמונה\" style={{ width: '100%', height: '100%', objectFit: 'contain' }} />;\r\n      case 'pdf':\r\n        return (\r\n          <iframe\r\n            src={fileUrl}\r\n            title=\"PDF view\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            style={{ border: 'none' }}\r\n            onLoad={() => setLoading(false)}\r\n            onError={() => {\r\n              setLoading(false);\r\n              toast.current.show({ severity: 'error', detail: 'Error in loading file.', life: 3000 });\r\n            }}\r\n          />\r\n        );\r\n      case 'document':\r\n        return (\r\n          <iframe\r\n            src={`https://view.officeapps.live.com/op/embed.aspx?src=${encodeURIComponent(fileUrl)}`}\r\n            title=\"File view \"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            style={{ border: 'none' }}\r\n          />\r\n        );\r\n      default:\r\n        return (\r\n          <iframe\r\n            src={fileUrl}\r\n            title=\"File view\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            style={{ border: 'none' }}\r\n            onLoad={() => setLoading(false)}\r\n            onError={() => {\r\n              setLoading(false);\r\n              toast.current.show({ severity: 'error', detail: 'Error in loading file.', life: 3000 });\r\n            }}\r\n          />\r\n        );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '2rem', display: 'flex', justifyContent: 'center' }}>\r\n      <Toast ref={toast} />\r\n\r\n      <div\r\n        style={{\r\n          border: '1px solid #ccc',\r\n          borderRadius: '8px',\r\n          boxShadow: '0 2px 5px rgba(0, 0, 0, 0.05)',\r\n          width: '100%',\r\n          maxWidth: '1000px',\r\n          height: '80vh',\r\n          overflow: 'hidden',\r\n          backgroundColor: '#f9f9f9',\r\n          position: 'relative',\r\n        }}\r\n      >\r\n        {loading && (\r\n          <div style={{\r\n            position: 'absolute', top: 0, left: 0, width: '100%', height: '100%',\r\n            backgroundColor: '#f9f9f9',\r\n            display: 'flex', alignItems: 'center', justifyContent: 'center',\r\n            zIndex: 10\r\n          }}>\r\n            Loading file...\r\n          </div>\r\n        )}\r\n        {renderFile()}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default FileView;\r\n\r\n"],"names":["FileView","fileId","useParams","fileUrl","setFileUrl","useState","fileType","setFileType","loading","setLoading","token","useSelector","state","user","apiUrl","getConfig","API_URL","toast","useRef","useEffect","fetchFile","async","response","axios","get","concat","headers","url","name","contentType","data","extension","split","pop","toLowerCase","type","includes","err","console","error","current","show","severity","detail","life","_jsxs","style","padding","display","justifyContent","children","_jsx","Toast","ref","border","borderRadius","boxShadow","width","maxWidth","height","overflow","backgroundColor","position","top","left","alignItems","zIndex","renderFile","controls","src","alt","objectFit","title","onLoad","onError","encodeURIComponent"],"sourceRoot":""}