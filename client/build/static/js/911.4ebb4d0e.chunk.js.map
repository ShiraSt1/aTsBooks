{"version":3,"file":"static/js/911.4ebb4d0e.chunk.js","mappings":"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","sources":["Components/UserProfile.jsx","Components/Users.jsx"],"sourcesContent":["import React from 'react';\r\n import { Avatar } from 'primereact/avatar';\r\n \r\n // פונקציה להגרלת צבע על בסיס שם המשתמש\r\n const getColorFromName = (name) => {\r\n     const colors = ['#007ad9', '#ff5722', '#4caf50', '#9c27b0', '#e91e63', '#ffc107', '#673ab7'];\r\n     const index = name.toLowerCase().charCodeAt(0) % colors.length;  // חשב צבע על פי האות הראשונה בשם\r\n     return colors[index];\r\n };\r\n \r\n const UserProfile = ({ name }) => {\r\n     // חישוב האות הראשונה מהשם\r\n     const firstLetter = name ? name.charAt(0).toUpperCase() : '';\r\n     // חישוב צבע אחיד על פי השם\r\n     const backgroundColor = getColorFromName(name);\r\n \r\n     return (\r\n         <div className=\"flex align-items-center\">\r\n             {/* שימוש ב-Avatar להצגת האות הראשונה עם צבע רקע אחיד לכל שם */}\r\n             <Avatar label={firstLetter} size=\"large\" className=\"mr-2\" style={{ backgroundColor, color: 'white', borderRadius: '50%' }} />\r\n             <span className=\"font-bold\">{name}</span>\r\n         </div>\r\n     );\r\n };\r\n \r\n export default UserProfile;","import { Button } from 'primereact/button';\r\nimport 'primeicons/primeicons.css';\r\nimport axios from 'axios';\r\nimport { useRef } from 'react';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { PickList } from 'primereact/picklist';\r\nimport UserProfile from './UserProfile';\r\nimport { FaTrashAlt } from 'react-icons/fa';\r\nimport \"../Styles/Users.css\";\r\nimport { Toast } from 'primereact/toast';\r\nimport { confirmDialog } from 'primereact/confirmdialog';\r\nimport { ConfirmDialog } from 'primereact/confirmdialog';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst Users = () => {\r\n    const navigate = useNavigate();\r\n    const { token } = useSelector((state) => state.token);\r\n    const { user } = useSelector((state) => state.token);\r\n    const [source, setSource] = useState([]);\r\n    const [target, setTarget] = useState([]);\r\n    const toast = useRef(null)\r\n    const [sourceSelection, setSourceSelection] = useState([]);\r\n    const [targetSelection, setTargetSelection] = useState([]);\r\n\r\n    const getUsers = async () => {\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}api/user`, {\r\n                headers: { 'Authorization': `Bearer ${token}` }\r\n            });\r\n            if (res.status === 200) {\r\n                const confirmedUsers = res.data.filter(user => (user.confirm === true && user.roles !== 'Admin'));\r\n                const notConfirmedUsers = res.data.filter(user => (user.confirm === false && user.roles !== 'Admin'));\r\n                setSource(notConfirmedUsers);\r\n                setTarget(confirmedUsers);\r\n            }\r\n        } catch (e) {\r\n            toast.current.show({ severity: 'error', summary: 'Error', detail: 'Error loading users', life: 3000 });\r\n        }\r\n    };\r\n\r\n    const createUser = async (nameRef, emailRef, phoneRef, passwordRef) => {\r\n        const newUser = {\r\n            name: nameRef.current.value ? nameRef.current.value : \" \",\r\n            email: emailRef.current.value ? emailRef.current.value : \"\",\r\n            phone: phoneRef.current.value ? phoneRef.current.value : \" \",\r\n            password: passwordRef.current.value ? passwordRef.current.value : \" \"\r\n        };\r\n        try {\r\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}api/user`, newUser, {\r\n                headers: { 'Authorization': `Bearer ${token}` }\r\n            });\r\n            if (res.status === 200 || res.status === 201) {\r\n                toast.current.show({ severity: 'success', summary: 'Success', detail: 'User created successfully', life: 3000 });\r\n                navigate('/login');\r\n            }\r\n        } catch (e) {\r\n            toast.current.show({ severity: 'error', summary: 'Error', detail: 'Error loading/deleting/confirming user', life: 3000 });\r\n        }\r\n    };\r\n\r\n    const confirmDeleteUser = (id) => {\r\n        confirmDialog({\r\n            message: 'Are you sure you want to delete this user?',\r\n            header: 'Delete Confirmation',\r\n            icon: 'pi pi-exclamation-triangle',\r\n            acceptLabel: 'Yes',\r\n            rejectLabel: 'No',\r\n            accept: () => deleteUser(id),\r\n            reject: () => {\r\n                toast.current.show({ severity: 'info', summary: 'Cancelled', detail: 'Deletion canceled', life: 3000 });\r\n            }\r\n        });\r\n    };\r\n\r\n    const deleteUser = async (id) => {\r\n        try {\r\n            const res = await axios.delete(`${process.env.REACT_APP_API_URL}api/user/${id}`, {\r\n                headers: { 'Authorization': `Bearer ${token}` }\r\n            });\r\n            if (res.status === 200) {\r\n                setSource(prevSource => prevSource.filter(user => user._id !== res.data._id));\r\n                setTarget(prevTarget => prevTarget.filter(user => user._id !== res.data._id));\r\n                toast.current.show({ severity: 'success', summary: 'Success', detail: 'User deleted', life: 3000 });\r\n            }\r\n        } catch (e) {\r\n            toast.current.show({ severity: 'error', summary: 'Error', detail: 'Error loading/deleting/confirming user', life: 3000 });\r\n        }\r\n    };\r\n\r\n    const confirmUser = async (id) => {\r\n        try {\r\n            const _id = id;\r\n            const res = await axios.put(`${process.env.REACT_APP_API_URL}api/user/confirm`, { _id }, {\r\n                headers: { 'Authorization': `Bearer ${token}` }\r\n            });\r\n            if (res.status === 200) {\r\n            }\r\n        } catch (e) {\r\n            toast.current.show({ severity: 'error', summary: 'Error', detail: 'Error loading/deleting/confirming user', life: 3000 });\r\n        }\r\n    }\r\n\r\n    const onChange = (event) => {\r\n        const movedToTarget = event.target.filter(user => !target.some(u => u._id === user._id));\r\n        const movedToSource = event.source.filter(user => !source.some(u => u._id === user._id));\r\n        movedToTarget.forEach(user => confirmUser(user._id));\r\n        movedToSource.forEach(user => confirmUser(user._id));\r\n        setSource(event.source);\r\n        setTarget(event.target);\r\n        setSourceSelection([]);\r\n        setTargetSelection([]);\r\n    };\r\n\r\n    const itemTemplate = (item) => {\r\n        return (\r\n            <div className=\"flex flex-wrap p-2 align-items-center gap-3\">\r\n                <UserProfile name={item.name}></UserProfile>\r\n                <span className=\"font-semibold\">{item.email}</span>\r\n                <div className=\"flex-1 flex flex-column gap-2\">\r\n                    <div className=\"flex align-items-center gap-2\">\r\n                        <div className=\"flex align-items-center gap-2\">\r\n                            {/* הצגת תאריך יצירת המשתמש */}\r\n                            <br />\r\n                            <i className=\"pi pi-calendar text-sm\"></i>\r\n                            <span>{new Date(item.createdAt).toLocaleDateString()}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <FaTrashAlt size={20} className=\"delete-icon\" onClick={() => confirmDeleteUser(item._id)} />\r\n            </div>\r\n        );\r\n    };\r\n\r\n    useEffect(() => {\r\n        getUsers();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <Toast ref={toast} />\r\n            <ConfirmDialog />\r\n            <PickList\r\n                dataKey=\"_id\"\r\n                source={source}\r\n                target={target}\r\n                onChange={onChange}\r\n                itemTemplate={itemTemplate}\r\n                selection={sourceSelection}\r\n                onSelectionChange={(e) => {\r\n                    setSourceSelection(e.sourceSelection);\r\n                    setTargetSelection(e.targetSelection);\r\n                }}\r\n                filter\r\n                filterBy=\"name\"\r\n                breakpoint=\"1280px\"\r\n                sourceHeader=\"Not Confirmed\"\r\n                targetHeader=\"Confirmed\"\r\n                sourceStyle={{ height: '24rem' }}\r\n                targetStyle={{ height: '24rem' }}\r\n                sourceFilterPlaceholder=\"Search by name\"\r\n                targetFilterPlaceholder=\"Search by name\"\r\n            />\r\n        </div>\r\n    );\r\n};\r\nexport default Users;\r\n\r\n"],"names":["_ref","name","firstLetter","charAt","toUpperCase","backgroundColor","colors","toLowerCase","charCodeAt","length","getColorFromName","_jsxs","className","children","_jsx","Avatar","label","size","style","color","borderRadius","Users","useNavigate","token","useSelector","state","user","source","setSource","useState","target","setTarget","toast","useRef","sourceSelection","setSourceSelection","targetSelection","setTargetSelection","deleteUser","async","res","axios","delete","concat","process","id","headers","status","prevSource","filter","_id","data","prevTarget","current","show","severity","summary","detail","life","e","confirmUser","put","useEffect","get","confirmedUsers","confirm","roles","notConfirmedUsers","getUsers","Toast","ref","ConfirmDialog","PickList","dataKey","onChange","event","movedToTarget","some","u","movedToSource","forEach","itemTemplate","item","UserProfile","email","Date","createdAt","toLocaleDateString","FaTrashAlt","onClick","confirmDeleteUser","confirmDialog","message","header","icon","acceptLabel","rejectLabel","accept","reject","selection","onSelectionChange","filterBy","breakpoint","sourceHeader","targetHeader","sourceStyle","height","targetStyle","sourceFilterPlaceholder","targetFilterPlaceholder"],"sourceRoot":""}