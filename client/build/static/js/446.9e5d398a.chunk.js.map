{"version":3,"file":"static/js/446.9e5d398a.chunk.js","mappings":"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","sources":["Components/Titles.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { PanelMenu } from 'primereact/panelmenu';\r\nimport { Button } from 'primereact/button';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport { Toast } from 'primereact/toast';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport axios from 'axios';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { getConfig } from '../config';\r\nimport { ProgressSpinner } from 'primereact/progressspinner';\r\n\r\nconst Titles = () => {\r\n    const [items, setItems] = useState([]);\r\n    const [visibleUpload, setVisibleUpload] = useState(false);\r\n    const [uploadTitleId, setUploadTitleId] = useState(null);\r\n    const [newFileName, setNewFileName] = useState('');\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n    const [filesByTitle, setFilesByTitle] = useState({});\r\n    const [book, setBook] = useState(null);\r\n    const { token } = useSelector((state) => state.token);\r\n    const { user } = useSelector((state) => state.token);\r\n    const toast = useRef(null);\r\n    const { bookId } = useParams();\r\n    const navigate = useNavigate();\r\n    const apiUrl = getConfig().API_URL;\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [compLoading, setCompLoading] = useState(false);\r\n\r\n    const fetchBook = async () => {\r\n        try {\r\n            const res = await axios.get(`${apiUrl}api/book/${bookId}`, {\r\n                headers: { 'Authorization': `Bearer ${token}` }\r\n            });\r\n            setBook(res.data);\r\n\r\n        } catch (err) {\r\n            if (err.status === 400)\r\n                toast?.current.show({ severity: 'error', summary: 'Error', detail: 'No book found', life: 3000 });\r\n            console.error(\"error loading book:\", err);\r\n        }\r\n    };\r\n\r\n    const uploadFileToS3 = async (file) => {\r\n        try {\r\n            const res = await axios.post(`${apiUrl}api/file/presign`, {\r\n                fileName: file.name,\r\n                fileType: file.type\r\n            }, {\r\n                headers: { 'Authorization': `Bearer ${token}` }\r\n            });\r\n\r\n            const { url, key } = res.data;\r\n\r\n            await axios.put(url, file, {\r\n                headers: {\r\n                    'Content-Type': file.type\r\n                }\r\n            });\r\n\r\n            return key;\r\n        } catch (err) {\r\n            console.error(\"Error uploading to S3:\", err);\r\n            toast.current?.show({ severity: 'error', summary: 'Error', detail: 'Upload to S3 failed', life: 3000 });\r\n            return null;\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        const loadAll = async () => {\r\n            setCompLoading(true)\r\n            try {\r\n                fetchBook();\r\n                fetchTitles();\r\n            } finally {\r\n                setCompLoading(false)\r\n            }\r\n        }\r\n        loadAll();\r\n    }, []);\r\n\r\n    const fetchTitles = async () => {\r\n        setCompLoading(true);\r\n        try {\r\n            const res = await axios.get(`${apiUrl}api/title/getTitlesByBook/${bookId}`, {\r\n                headers: { 'Authorization': `Bearer ${token}` }\r\n            });\r\n            const titles = res.data;\r\n            const filesMap = {};\r\n            for (const title of titles) {\r\n                const filesRes = await axios.get(`${apiUrl}api/file/title/${title._id}`, {\r\n                    headers: { 'Authorization': `Bearer ${token}` }\r\n                });\r\n\r\n                filesMap[title._id] = filesRes.data;\r\n            }\r\n            setFilesByTitle(filesMap);\r\n            const panelItems = titles.map(title => ({\r\n                label: (\r\n                    <div className=\"flex justify-between align-items-center w-full\">\r\n                        <span>{title.name}</span>\r\n                        {user?.roles === \"Admin\" && (<>\r\n                            <Button icon=\"pi pi-plus\" rounded text size=\"small\" onClick={(e) => {\r\n                                setErrorMessage(\"\");\r\n                                e.stopPropagation();\r\n                                setUploadTitleId(title._id);\r\n                                setVisibleUpload(true);\r\n                            }} /></>)}\r\n                    </div>\r\n                ),\r\n                items: (filesMap[title._id] || []).map(file => ({\r\n                    label: (\r\n                        <div className=\"flex justify-between align-items-center w-full gap-2\">\r\n\r\n                            <span\r\n                                style={{\r\n                                    flexGrow: 1,\r\n                                    minWidth: 0,\r\n                                    overflow: 'hidden',\r\n                                    textOverflow: 'ellipsis',\r\n                                    whiteSpace: 'nowrap',\r\n                                    display: 'block'\r\n                                }}\r\n                                title={file.name}\r\n                            >\r\n                                {/* {file.name} */}\r\n                                {(file.name).length > 30\r\n                                    ? (file.name).slice(0, 30) + '...'\r\n                                    : (file.name)\r\n                                }\r\n                            </span>\r\n\r\n                            <span className=\"flex gap-2\">\r\n                                <Button icon=\"pi pi-eye\" rounded text size=\"small\" onClick={(e) => {\r\n                                    e.stopPropagation();\r\n                                    navigate(`/fileview/${file._id}`);\r\n                                }} />\r\n                                <Button icon=\"pi pi-download\" rounded text size=\"small\" onClick={(e) => {\r\n                                    e.stopPropagation();\r\n                                    window.open(`${apiUrl}api/file/download/${file._id}?name=${file.customName || file.name}`, '_blank'\r\n                                    );\r\n                                }} />\r\n                                {user?.roles === \"Admin\" && (<>\r\n                                    <Button icon=\"pi pi-trash\" rounded text size=\"small\" severity=\"danger\" onClick={(e) => {\r\n                                        e.stopPropagation();\r\n                                        handleDelete(file._id, title._id);\r\n                                    }} /></>)}\r\n                            </span>\r\n                        </div>\r\n                    )\r\n                }))\r\n            }));\r\n            setItems(panelItems);\r\n        } catch (err) {\r\n            console.error(err);\r\n            toast.current?.show({ severity: 'error', summary: 'Error', detail: 'Error loading', life: 3000 });\r\n        } finally {\r\n            setCompLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleDelete = async (fileId, titleId) => {\r\n        try {\r\n            await axios.delete(`${apiUrl}api/file/${fileId}`, {\r\n                headers: { 'Authorization': `Bearer ${token}` }\r\n            });\r\n            setFilesByTitle(prev => ({\r\n                ...prev,\r\n                [titleId]: prev[titleId].filter(f => f._id !== fileId)\r\n            }));\r\n            fetchTitles();\r\n            toast.current?.show({ severity: 'success', summary: 'Deleted', detail: 'File deleted successfuly', life: 2000 });\r\n        } catch (err) {\r\n            console.error(err);\r\n            toast.current?.show({ severity: 'error', summary: 'Error', detail: 'Error deleting', life: 3000 });\r\n        }\r\n    };\r\n\r\n    const handleUpload = async () => {\r\n        if (!selectedFile || !uploadTitleId) return;\r\n\r\n        setIsLoading(true)\r\n        const s3Key = await uploadFileToS3(selectedFile);\r\n        if (!s3Key) return;\r\n\r\n        const fileUrl = `https://${process.env.REACT_APP_S3_BUCKET}.s3.${process.env.REACT_APP_AWS_REGION}.amazonaws.com/${s3Key}`;\r\n\r\n        try {\r\n            await axios.post(`${apiUrl}api/file/save-metadata`, {\r\n                title: uploadTitleId,\r\n                name: selectedFile.name,\r\n                customName: newFileName,\r\n                s3Key,\r\n                url: fileUrl,\r\n                size: Number((selectedFile.size / 1024).toFixed(2))\r\n            }, {\r\n                headers: { 'Authorization': `Bearer ${token}` }\r\n            });\r\n\r\n            fetchTitles();\r\n            setVisibleUpload(false);\r\n            setNewFileName('');\r\n            setSelectedFile(null);\r\n            setFilePreview('');\r\n            toast.current?.show({ severity: 'success', summary: 'Uploaded', detail: 'File uploaded successfully', life: 2000 });\r\n        } catch (err) {\r\n            console.error(\"Error saving metadata:\", err);\r\n            toast.current?.show({ severity: 'error', summary: 'Error', detail: 'Saving file failed', life: 3000 });\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    };\r\n\r\n\r\n    const [filePreview, setFilePreview] = useState(''); // תצוגה מקדימה של שם הקובץ הנבחר\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n\r\n    return (\r\n        <div className=\"p-4\">\r\n            {compLoading ? (\r\n                <div className=\"flex justify-content-center align-items-center\" style={{ height: '80vh' }}>\r\n                    <div className=\"flex justify-center items-center gap-3 text-xl mt-6\">\r\n                        <div className=\"custom-spinner\" />\r\n                        <span>Loading, please wait...</span>\r\n                    </div>\r\n                </div>\r\n            ) : (<>\r\n                {book && (\r\n                    <h2 className=\"text-center mb-4\">{book.name}</h2>\r\n                )}\r\n                <div className=\"flex flex-column md:flex-row gap-4\">\r\n                    {/* תמונת הספר בצד שמאל */}\r\n                    {book?.image && (\r\n                        <div className=\"flex justify-content-center md:w-4\">\r\n                            <img\r\n                                src={book.image}\r\n                                alt=\"Book\"\r\n                                className=\"border-round shadow-2\"\r\n                                style={{ maxWidth: '100%', maxHeight: '500px', objectFit: 'contain' }}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    {/* כותרות בצד ימין */}\r\n                    <div className=\"flex-grow-1\">\r\n\r\n                        <PanelMenu model={items} className=\"w-full md:w-30rem\" />\r\n                    </div>\r\n                </div>\r\n                <Dialog\r\n                    header=\"Upload new file\"\r\n                    visible={visibleUpload}\r\n                    onHide={() => {\r\n                        setVisibleUpload(false);\r\n                        setSelectedFile(null); // איפוס הקובץ הנבחר אם החלון נסגר\r\n                        setFilePreview(''); // איפוס תצוגת שם הקובץ\r\n                    }}\r\n                    style={{ width: '30rem', borderRadius: '8px', textAlign: 'center' }}\r\n                    className=\"custom-upload-dialog\"\r\n                >\r\n                    <div className=\"flex flex-column gap-4\" style={{ padding: '1.5rem' }}>\r\n                        <label htmlFor=\"fileName\" className=\"font-medium\" style={{ textAlign: 'left' }}>\r\n                            File name\r\n                        </label>\r\n                        <InputText\r\n                            id=\"fileName\"\r\n                            placeholder=\"Enter file name\"\r\n                            value={newFileName}\r\n                            onChange={(e) => setNewFileName(e.target.value)}\r\n                            className=\"p-inputtext-lg\"\r\n                            style={{ borderRadius: '6px', width: '100%' }}\r\n                        />\r\n                        {errorMessage && (\r\n                            <div style={{ color: 'red', marginTop: '8px' }}>\r\n                                {errorMessage}\r\n                            </div>\r\n                        )}\r\n                        <FileUpload\r\n                            mode=\"basic\"\r\n                            auto={false} // ביטול העלאה אוטומטית\r\n                            customUpload\r\n                            chooseLabel=\"Choose file\"\r\n                            uploadHandler={({ files }) => {\r\n                                setSelectedFile(files[0]); // שמירת הקובץ הנבחר ב-state זמני\r\n                                setFilePreview(files[0]?.name || ''); // הצגת שם הקובץ הנבחר\r\n                            }}\r\n                            className=\"p-button-primary\"\r\n                            style={{ width: '100%' }}\r\n\r\n                        />\r\n                        {filePreview && (\r\n                            <div style={{ textAlign: 'left', fontSize: '0.9rem', color: '#555' }}>\r\n                                <strong>Selected file:</strong> {filePreview}\r\n                            </div>\r\n                        )}\r\n                        <div className=\"flex justify-content-center gap-3\">\r\n                            <Button\r\n                                onClick={() => {\r\n                                    if (selectedFile) {\r\n                                        handleUpload({ files: [selectedFile] }); // קריאה ל-handleUpload עם הקובץ הנבחר\r\n                                    } else {\r\n                                        toast.current?.show({ severity: 'warn', summary: 'Error', detail: 'Press upload below', life: 3000 });\r\n                                    }\r\n                                }}\r\n                                disabled={isLoading}\r\n                                className=\"p-button-primary\"\r\n                                style={{ width: '40%', position: 'relative' }}\r\n                            >\r\n                                {isLoading ? (\r\n                                    <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', width: '100%', gap: '0.5rem', marginTop: '1rem' }}>\r\n                                        <ProgressSpinner\r\n                                            style={{ width: '20px', height: '20px' }}\r\n                                            strokeWidth=\"4\"\r\n                                        />\r\n                                        <span>Loading</span>\r\n                                    </div>\r\n                                ) : (\r\n                                    <span>Upload</span>\r\n                                )}\r\n                            </Button>\r\n                            <Button\r\n                                label=\"Cancel\"\r\n                                onClick={() => {\r\n                                    setVisibleUpload(false);\r\n                                    setSelectedFile(null); // איפוס הקובץ הנבחר\r\n                                    setFilePreview(''); // איפוס שם הקובץ\r\n                                }}\r\n                                className=\"p-button-secondary\"\r\n                                style={{ width: '40%' }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </Dialog>\r\n                <Toast ref={toast} />\r\n            </>)}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Titles;"],"names":["Titles","items","setItems","useState","visibleUpload","setVisibleUpload","uploadTitleId","setUploadTitleId","newFileName","setNewFileName","selectedFile","setSelectedFile","filesByTitle","setFilesByTitle","book","setBook","token","useSelector","state","user","toast","useRef","bookId","useParams","navigate","useNavigate","apiUrl","getConfig","API_URL","isLoading","setIsLoading","compLoading","setCompLoading","useEffect","async","res","axios","get","concat","headers","data","err","status","current","show","severity","summary","detail","life","console","error","fetchBook","fetchTitles","loadAll","titles","filesMap","title","filesRes","_id","panelItems","map","label","_jsxs","className","children","_jsx","name","roles","_Fragment","Button","icon","rounded","text","size","onClick","e","setErrorMessage","stopPropagation","file","style","flexGrow","minWidth","overflow","textOverflow","whiteSpace","display","length","slice","window","open","customName","handleDelete","_toast$current2","fileId","titleId","_toast$current3","delete","prev","_objectSpread","filter","f","_toast$current4","handleUpload","s3Key","post","fileName","fileType","type","url","key","put","_toast$current","uploadFileToS3","fileUrl","process","REACT_APP_S3_BUCKET","REACT_APP_AWS_REGION","_toast$current5","Number","toFixed","setFilePreview","_toast$current6","filePreview","errorMessage","height","image","src","alt","maxWidth","maxHeight","objectFit","PanelMenu","model","Dialog","header","visible","onHide","width","borderRadius","textAlign","padding","htmlFor","InputText","id","placeholder","value","onChange","target","color","marginTop","FileUpload","mode","auto","customUpload","chooseLabel","uploadHandler","_ref","_files$","files","fontSize","_toast$current7","disabled","position","alignItems","justifyContent","gap","ProgressSpinner","strokeWidth","Toast","ref"],"sourceRoot":""}