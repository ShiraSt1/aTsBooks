{"version":3,"file":"static/js/180.1a7caebb.chunk.js","mappings":"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","sources":["Components/Home.jsx","../node_modules/primereact/progressspinner/progressspinner.esm.js"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\r\nimport home from '../Styles/home.jpg';\r\nimport { ProgressSpinner } from 'primereact/progressspinner';\r\nimport axios from 'axios';\r\nimport { getConfig } from '../config';\r\nimport { Toast } from 'primereact/toast';\r\n\r\nconst Home = () => {\r\n\r\n  const apiUrl = getConfig().API_URL;\r\n  const [subscribed, setSubscribed] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const toast = useRef(null);\r\n\r\n  const handleSubmit = async (e) => {\r\n\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const name = e.target.elements.name.value;\r\n    const email = e.target.elements.email.value;\r\n    const data = { name, email };\r\n    setSubscribed(false);\r\n    try {\r\n      const res = await axios.post(`${apiUrl}api/course/newsLetter`, data, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        }\r\n      });\r\n      if (res.status === 201 || res.status === 200) {\r\n        setSubscribed(true);\r\n      } else {\r\n        toast.current.show({ severity: 'error', detail: 'There was a problem sending your message.', life: 3000 });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n      toast.current.show({ severity: 'error', detail: 'There was a problem sending your message.', life: 3000 });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"home-container\">\r\n      <Toast ref={toast} />\r\n\r\n      <div className=\"image-section\">\r\n        <img src={home} alt=\"Centered Image\" />\r\n      </div>\r\n      <div className=\"info-section\">\r\n\r\n        <div className=\"contact-section\">\r\n          <h2>Contact Us</h2>\r\n          <div className=\"manager-info\">\r\n            <p><strong>Name: </strong>Tami Stern</p>\r\n            <p><strong>Email: </strong>tami@meler.info</p>\r\n            <p><strong>Phone Number: </strong>0527658752</p>\r\n          </div>\r\n          <div className=\"manager-info\">\r\n            <p><strong>Name: </strong>Ayelet Toledano</p>\r\n            <p><strong>Email: </strong>a0533132260@gmail.com</p>\r\n            <p><strong>Phone Number: </strong>0533132260</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"newsletter-section\">\r\n          <h2>Join our Newsletter</h2>\r\n          {loading && (\r\n            <div className=\"loading-container\">\r\n              <ProgressSpinner style={{ width: '30px', height: '30px' }} />\r\n              <p>Your request is being processed...</p>\r\n            </div>\r\n          )}\r\n          <p>Subscribe to get the latest updates and news</p>\r\n          <form className=\"newsletter-form\" onSubmit={e => handleSubmit(e)}>\r\n            {subscribed ? (\r\n              <div className=\"thank-you-message\">Thank you for subscribing</div>\r\n            ) : (\r\n              <>\r\n                <input name=\"email\" type=\"email\" placeholder=\"Enter your email\" required />\r\n                <input name=\"name\" type=\"text\" placeholder=\"Enter your name\" required />\r\n                <button type=\"submit\">Subscribe</button>\r\n              </>\r\n            )}\r\n          </form>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};\r\nexport default Home;\r\n","'use client';\nimport * as React from 'react';\nimport { PrimeReactContext } from 'primereact/api';\nimport { ComponentBase, useHandleStyle } from 'primereact/componentbase';\nimport { useMergeProps } from 'primereact/hooks';\nimport { classNames } from 'primereact/utils';\n\nvar classes = {\n  root: 'p-progress-spinner',\n  spinner: 'p-progress-spinner-svg',\n  circle: 'p-progress-spinner-circle'\n};\nvar styles = \"\\n@layer primereact {\\n    .p-progress-spinner {\\n        position: relative;\\n        margin: 0 auto;\\n        width: 100px;\\n        height: 100px;\\n        display: inline-block;\\n    }\\n    \\n    .p-progress-spinner::before {\\n        content: '';\\n        display: block;\\n        padding-top: 100%;\\n    }\\n    \\n    .p-progress-spinner-svg {\\n        animation: p-progress-spinner-rotate 2s linear infinite;\\n        height: 100%;\\n        transform-origin: center center;\\n        width: 100%;\\n        position: absolute;\\n        top: 0;\\n        bottom: 0;\\n        left: 0;\\n        right: 0;\\n        margin: auto;\\n    }\\n    \\n    .p-progress-spinner-circle {\\n        stroke-dasharray: 89, 200;\\n        stroke-dashoffset: 0;\\n        stroke: #d62d20;\\n        animation: p-progress-spinner-dash 1.5s ease-in-out infinite, p-progress-spinner-color 6s ease-in-out infinite;\\n        stroke-linecap: round;\\n    }\\n}\\n\\n@keyframes p-progress-spinner-rotate {\\n    100% {\\n        transform: rotate(360deg);\\n    }\\n}\\n\\n@keyframes p-progress-spinner-dash {\\n    0% {\\n        stroke-dasharray: 1, 200;\\n        stroke-dashoffset: 0;\\n    }\\n    50% {\\n        stroke-dasharray: 89, 200;\\n        stroke-dashoffset: -35px;\\n    }\\n    100% {\\n        stroke-dasharray: 89, 200;\\n        stroke-dashoffset: -124px;\\n    }\\n}\\n\\n@keyframes p-progress-spinner-color {\\n    100%,\\n    0% {\\n        stroke: #d62d20;\\n    }\\n    40% {\\n        stroke: #0057e7;\\n    }\\n    66% {\\n        stroke: #008744;\\n    }\\n    80%,\\n    90% {\\n        stroke: #ffa700;\\n    }\\n}\\n\";\nvar inlineStyles = {\n  spinner: function spinner(_ref) {\n    var props = _ref.props;\n    return {\n      animationDuration: props.animationDuration\n    };\n  }\n};\nvar ProgressSpinnerBase = ComponentBase.extend({\n  defaultProps: {\n    __TYPE: 'ProgressSpinner',\n    id: null,\n    style: null,\n    className: null,\n    strokeWidth: '2',\n    fill: 'none',\n    animationDuration: '2s',\n    children: undefined\n  },\n  css: {\n    classes: classes,\n    styles: styles,\n    inlineStyles: inlineStyles\n  }\n});\n\nvar ProgressSpinner = /*#__PURE__*/React.memo(/*#__PURE__*/React.forwardRef(function (inProps, ref) {\n  var mergeProps = useMergeProps();\n  var context = React.useContext(PrimeReactContext);\n  var props = ProgressSpinnerBase.getProps(inProps, context);\n  var elementRef = React.useRef(null);\n  var _ProgressSpinnerBase$ = ProgressSpinnerBase.setMetaData({\n      props: props\n    }),\n    ptm = _ProgressSpinnerBase$.ptm,\n    cx = _ProgressSpinnerBase$.cx,\n    sx = _ProgressSpinnerBase$.sx,\n    isUnstyled = _ProgressSpinnerBase$.isUnstyled;\n  useHandleStyle(ProgressSpinnerBase.css.styles, isUnstyled, {\n    name: 'progressspinner'\n  });\n  React.useImperativeHandle(ref, function () {\n    return {\n      props: props,\n      getElement: function getElement() {\n        return elementRef.current;\n      }\n    };\n  });\n  var rootProps = mergeProps({\n    id: props.id,\n    ref: elementRef,\n    style: props.style,\n    className: classNames(props.className, cx('root')),\n    role: 'progressbar',\n    'aria-busy': true\n  }, ProgressSpinnerBase.getOtherProps(props), ptm('root'));\n  var spinnerProps = mergeProps({\n    className: cx('spinner'),\n    viewBox: '25 25 50 50',\n    style: sx('spinner')\n  }, ptm('spinner'));\n  var circleProps = mergeProps({\n    className: cx('circle'),\n    cx: '50',\n    cy: '50',\n    r: '20',\n    fill: props.fill,\n    strokeWidth: props.strokeWidth,\n    strokeMiterlimit: '10'\n  }, ptm('circle'));\n  return /*#__PURE__*/React.createElement(\"div\", rootProps, /*#__PURE__*/React.createElement(\"svg\", spinnerProps, /*#__PURE__*/React.createElement(\"circle\", circleProps)));\n}));\nProgressSpinner.displayName = 'ProgressSpinner';\n\nexport { ProgressSpinner };\n"],"names":["Home","apiUrl","getConfig","API_URL","subscribed","setSubscribed","useState","loading","setLoading","toast","useRef","_jsxs","className","children","_jsx","Toast","ref","src","home","alt","ProgressSpinner","style","width","height","onSubmit","e","async","preventDefault","data","name","target","elements","value","email","res","axios","post","concat","headers","status","current","show","severity","detail","life","error","console","handleSubmit","_Fragment","type","placeholder","required","ProgressSpinnerBase","ComponentBase","extend","defaultProps","__TYPE","id","strokeWidth","fill","animationDuration","undefined","css","classes","root","spinner","circle","styles","inlineStyles","_ref","props","React","inProps","mergeProps","useMergeProps","context","PrimeReactContext","getProps","elementRef","_ProgressSpinnerBase$","setMetaData","ptm","cx","sx","isUnstyled","useHandleStyle","getElement","rootProps","classNames","role","getOtherProps","spinnerProps","viewBox","circleProps","cy","r","strokeMiterlimit","displayName"],"sourceRoot":""}